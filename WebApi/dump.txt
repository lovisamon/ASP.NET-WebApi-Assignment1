[AllowAnonymous]
[HttpPost("signup")]
public async Task<IActionResult> SignUp([FromBody] SignUpSignIn model)
{
    try
    {
        var user = new User
        {
            FirstName = model.FirstName,
            LastName = model.LastName,
            Email = model.Email,
            UserPassword = model.Password
        };

        _context.Users.Add(user);
        await _context.SaveChangesAsync();
    }
    catch (Exception e)
    {
        return new BadRequestObjectResult(e.Message);
    }

    return new OkResult();
}

[AllowAnonymous]
[HttpPost("signup")]
public async Task<IActionResult> SignIn([FromBody] SignUpSignIn model)
{
    try
    {
        var user = await _context.Users.FirstOrDefaultAsync(user => user.Email == model.Email);
        if (user != null)
        {
            if (user.ValidatePassword(model.Password))
            {
                        
            }
        }
    }
    catch (Exception e)
    {
        return new BadRequestObjectResult(e.Message);
    }

    return new OkResult();
}



--------------------------------------------
public void GeneratePassword(string password)
{
    using (var hmac = new HMACSHA512())
    {
        UserHash = hmac.ComputeHash(Encoding.UTF8.GetBytes(password));
        UserSalt = hmac.Key;

    }
}

public bool ValidatePassword(string password)
{
    using (var hmac = new HMACSHA512(UserSalt))
    {
        var computedUserHash = hmac.ComputeHash(Encoding.UTF8.GetBytes(password));
        for (int i=0; i < computedUserHash.Length; i++)
        {
            if (computedUserHash[i] != UserHash[i])
            {
                return false;
            }
        }
    }

    return true;
}